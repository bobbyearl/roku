{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/remote/remote.component.html","webpack:///./src/app/remote/remote.component.scss","webpack:///./src/app/remote/remote.component.ts","webpack:///./src/app/services/roku.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { RemoteComponent } from './remote/remote.component';\n\nconst routes: Routes = [\n  {\n    path: 'remote',\n    component: RemoteComponent\n  },\n  {\n    path: '**',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet class=\\\"mat-typography\\\"></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'roku';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RokuService } from './services/roku.service';\nimport { RemoteComponent } from './remote/remote.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RemoteComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatDividerModule\n  ],\n  providers: [\n    RokuService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  home works!\\n</p>\\n\\n<a routerLink=\\\"remote\\\">\\n  Remote\\n</a>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-grid-list\\n  cols=\\\"3\\\"\\n  [rowHeight]=\\\"rowHeight\\\"\\n>\\n  <mat-grid-tile>\\n    <mat-form-field>\\n      <mat-label>TV</mat-label>\\n      <mat-select [(value)]=\\\"selectedId\\\">\\n        <mat-option *ngFor=\\\"let tv of tvs\\\" \\n          [value]=\\\"tv.id\\\"\\n        >\\n          {{ tv.name }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('volumeDown')\\\"\\n    >\\n      &#8609;\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('volumeUp')\\\"\\n    >\\n    &#8607;\\n    </button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-divider></mat-divider>\\n\\n<mat-grid-list \\n  cols=\\\"3\\\"\\n  [rowHeight]=\\\"rowHeight\\\"\\n>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('back')\\\"\\n    >\\n      Back\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('*')\\\"\\n    >\\n      *\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('home')\\\"\\n    >\\n      Home\\n    </button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-divider></mat-divider>\\n\\n<mat-grid-list \\n  cols=\\\"3\\\"\\n  [rowHeight]=\\\"rowHeight\\\"\\n>\\n  <mat-grid-tile\\n    colspan=\\\"3\\\"\\n  >\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('up')\\\"\\n    >\\n      &#8679;\\n    </button>\\n  </mat-grid-tile\\n  >\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('left')\\\"\\n    >\\n      &#8678;\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('select')\\\"\\n    >\\n      OK\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('right')\\\"\\n    >\\n      &#8680;\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile\\n    colspan=\\\"3\\\"\\n  >\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('down')\\\"\\n    >\\n      &#8681;\\n    </button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-divider></mat-divider>\\n\\n<mat-grid-list \\n  cols=\\\"3\\\"\\n  [rowHeight]=\\\"rowHeight\\\"\\n>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('rev')\\\"\\n    >\\n      &#10558;\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('play')\\\"\\n    >\\n      Play/Pause\\n    </button>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"btnClick('fwd')\\\"\\n    >\\n      &#10559;\\n    </button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-divider></mat-divider>\\n\\n<mat-grid-list \\n  cols=\\\"4\\\"\\n  [rowHeight]=\\\"rowHeight\\\"\\n>\\n  <mat-grid-tile *ngFor=\\\"let key of keys\\\">\\n    <button\\n      mat-flat-button\\n      type=\\\"button\\\"\\n      color=\\\"basic\\\"\\n      (click)=\\\"btnClick(key)\\\"\\n    >\\n      {{ key }}\\n    </button>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n\"","module.exports = \"button {\\n  font-variant: small-caps;\\n  margin: 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ib2JieS5lYXJsL0dpdEh1Yi9yb2t1L3VpL3NyYy9hcHAvcmVtb3RlL3JlbW90ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHdCQUF3QjtFQUN4QixXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yZW1vdGUvcmVtb3RlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uIHtcbiAgZm9udC12YXJpYW50OiBzbWFsbC1jYXBzO1xuICBtYXJnaW46IDZweDtcbn0iXX0= */\"","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { RokuService } from '../services/roku.service';\nimport { TV } from '../models/tv.model';\n\n@Component({\n  selector: 'app-remote',\n  templateUrl: './remote.component.html',\n  styleUrls: ['./remote.component.scss']\n})\nexport class RemoteComponent implements OnInit {\n\n  public keys = [\n    'home',\n    'rev',\n    'fwd',\n    'play',\n    'select',\n    'left',\n    'right',\n    'down',\n    'up',\n    'back',\n    'replay',\n    'info',\n    'backspace',\n    'enter',\n    'volumeDown',\n    'volumeUp',\n    'volumeMute',\n    'inputTuner',\n    'inputHDMI1',\n    'inputHDMI2',\n    'inputHDMI3',\n    'inputHDMI4',\n    'inputAV1',\n    'channelUp',\n    'channelDown'\n  ].sort();\n\n  private keyCodeMap = {\n    left: 'ArrowLeft',\n    up: 'ArrowUp',\n    right: 'ArrowRight',\n    down: 'ArrowDown',\n    play: 'Space',\n    select: 'Enter'\n  };\n\n  public tvs: TV[];\n\n  public selectedId: number;\n\n  public duration = 3000;\n\n  public rowHeight = 80;\n\n  constructor (\n    private snackBar: MatSnackBar,\n    private rokuService: RokuService\n  ) {\n    this.rokuService\n      .getTVs()\n      .subscribe(tvs => {\n        this.tvs = tvs;\n        this.selectedId = this.tvs[0].id;\n      });\n  }\n\n  ngOnInit() { }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    Object.keys(this.keyCodeMap).some(name => {\n      if (this.keyCodeMap[name] === event.code) {\n        this.sendKey(name);\n        return true;\n      }\n    });\n  }\n\n  public btnClick(key: string) {\n    this.sendKey(key);\n  }\n\n  private sendKey(key: string) {\n    this.rokuService\n      .sendKey(this.selectedId, key)\n      .subscribe(\n        (response: any) => {\n          if (response.error) {\n            this.snackBar\n              .open(\n                `Handled API error: ${response.error}`,\n                'OK',\n                { duration: this.duration }\n              );\n          }\n        },\n        err => this.snackBar\n          .open(\n            `Fatal Error\\n${JSON.stringify(err)}`,\n            'OK',\n            { duration: this.duration }\n          )\n      );\n  }\n\n}\n","import {\n  Injectable\n} from '@angular/core';\n\nimport {\n  HttpClient\n} from '@angular/common/http';\n\nimport {\n  Observable\n} from 'rxjs';\n\nimport {\n  TV\n} from '../models/tv.model';\n\n@Injectable()\nexport class RokuService {\n  private base = 'http://192.168.1.5/api/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  public getTVs(): Observable<TV[]> {\n    return this.httpClient\n      .get<TV[]>(`${this.base}tvs`);\n  }\n\n  public sendKey(tvId: number, key: string): Observable<any> {\n    return this.httpClient\n      .post(\n        `${this.base}tvs/${tvId}/keypress/${key}`,\n        {}\n      );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}